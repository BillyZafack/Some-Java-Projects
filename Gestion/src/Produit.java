import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.LayoutStyle.ComponentPlacement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * 
 * @author Zafack Billy
 */
public class Produit extends javax.swing.JDialog {

	class Actionp implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			if (e.getSource() == pReprendre) {
				pID.setText("");
				pNom.setText("");
				pUnite.setText("");
				pVente.setText("");
				pAchat.setText("");
			}
			if (e.getSource() == pAnnuler) {
				setVisible(false);
			}
			if (e.getSource() == pConfirmer) {
				if (JOptionPane.showConfirmDialog(
						Produit.this,
						"Voulez vous vraiment enregistrer le produit "
								+ pNom.getText() + " ?", "CONFIRMATION",
						JOptionPane.YES_NO_CANCEL_OPTION) == JOptionPane.YES_OPTION) {
					if (pID.getText().equals("")) {
						JOptionPane
								.showMessageDialog(
										Produit.this,
										"Vous n'avez pas renseigner l'identificateur de produit",
										"CHAMPS NON-RENSEIGNE",
										JOptionPane.WARNING_MESSAGE);
					} else if (pUnite.equals("")) {
						JOptionPane
								.showMessageDialog(
										Produit.this,
										"Vous n'avez pas renseigner l'unitï¿½ de produit",
										"CHAMPS NON-RENSEIGNE",
										JOptionPane.WARNING_MESSAGE);
					} else {
						insertionProduit();
						insertionStock();
						setVisible(false);
					}
				}

			}
		}

	}

	// Variables declaration - do not modify
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JTextField pAchat;
	private javax.swing.JButton pAnnuler;
	private javax.swing.JButton pConfirmer;
	private javax.swing.JTextField pID;
	private javax.swing.JTextField pNom;
	private javax.swing.JButton pReprendre;
	private javax.swing.JTextField pUnite;

	private javax.swing.JTextField pVente;
	private JLabel label;
	private JLabel label_1;

	// End of variables declaration

	/**
	 * Creates new form Produits
	 */
	public Produit(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		setIconImage(Toolkit.getDefaultToolkit().getImage(
				".\\images\\fenetre.png"));
		initComponents();
		pConfirmer.addActionListener(new Actionp());
		pAnnuler.addActionListener(new Actionp());
		pReprendre.addActionListener(new Actionp());
		pID.setEnabled(false);
		String d = getLPIDD();
		System.out.println("WW " + d);
		d = d.substring(1, d.length());
		System.out.println("WW " + d);
		int i = Integer.parseInt(d);
		System.out.println("WW " + i);
		i++;
		System.out.println("WW " + i);
		pID.setText("P" + Integer.toString(i));
	}

	public String getLPIDD() {
		String ss = "";
		try {
			Statement stmt = Fenetre.getConnection().createStatement();
			ResultSet r = stmt
					.executeQuery("SELECT Identification_P FROM Produit");

			if (r.last()) {
				ss = r.getString("Identification_P");
			} else {
				ss = "P0";
			}
		} catch (SQLException s) {
			s.printStackTrace();
		}
		return ss;
	}

	public String getPID(String s) {
		String ss = "";
		try {
			Statement stmt = Fenetre.getConnection().createStatement();
			ResultSet r = stmt
					.executeQuery("SELECT ProduitID FROM Produit WHERE Identification_P=\""
							+ s + "\";");

			if (r.next()) {
				ss = r.getString("ProduitID");
			}
		} catch (SQLException s1) {
			s1.printStackTrace();
		}
		return ss;
	}

	public String getPPID(String s) {
		String ss = "";
		try {
			Statement stmt = Fenetre.getConnection().createStatement();
			ResultSet r = stmt
					.executeQuery("SELECT Identification_P FROM Produit WHERE ProduitID="
							+ s);

			if (r.next()) {
				ss = r.getString("Identification_P");
			}
		} catch (SQLException s1) {
			s1.printStackTrace();
		}
		return ss;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		pConfirmer = new javax.swing.JButton();
		pAnnuler = new javax.swing.JButton();
		pReprendre = new javax.swing.JButton();
		pID = new javax.swing.JTextField();
		pNom = new javax.swing.JTextField();
		pAchat = new javax.swing.JTextField();
		pVente = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		pUnite = new javax.swing.JTextField();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
		jLabel1.setText("NOUVEAU PRODUIT");

		jLabel2.setText("IDENTIFICATION : *");

		jLabel3.setText("NOM DU PRODUIT : *");

		jLabel4.setText("PRIX D'ACHAT UNITAIRE :");

		jLabel5.setText("PRIX DE VENTE UNITAIRE:");

		pConfirmer.setText("Confirmer");

		pAnnuler.setText("Annuler");

		pReprendre.setText("Reprendre");

		pVente.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pVenteActionPerformed(evt);
			}
		});
		pReprendre.setIcon(new ImageIcon(".\\images\\reprendre.png"));
		pAnnuler.setIcon(new ImageIcon(".\\images\\annuler.png"));
		pConfirmer.setIcon(new ImageIcon(".\\images\\ajouter.png"));
		jLabel6.setText("UNITE : *");

		label = new JLabel("FCFA");

		label_1 = new JLabel("FCFA");

		javax.swing.GroupLayout gl_jPanel1 = new javax.swing.GroupLayout(
				jPanel1);
		gl_jPanel1
				.setHorizontalGroup(gl_jPanel1
						.createParallelGroup(Alignment.TRAILING)
						.addGroup(
								gl_jPanel1
										.createSequentialGroup()
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.LEADING)
														.addGroup(
																gl_jPanel1
																		.createSequentialGroup()
																		.addGap(191)
																		.addComponent(
																				jLabel1))
														.addGroup(
																gl_jPanel1
																		.createSequentialGroup()
																		.addGap(75)
																		.addComponent(
																				pReprendre,
																				GroupLayout.PREFERRED_SIZE,
																				139,
																				GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				ComponentPlacement.RELATED)
																		.addGroup(
																				gl_jPanel1
																						.createParallelGroup(
																								Alignment.LEADING)
																						.addGroup(
																								gl_jPanel1
																										.createSequentialGroup()
																										.addGap(139)
																										.addComponent(
																												pConfirmer,
																												GroupLayout.PREFERRED_SIZE,
																												113,
																												GroupLayout.PREFERRED_SIZE))
																						.addGroup(
																								gl_jPanel1
																										.createParallelGroup(
																												Alignment.TRAILING)
																										.addGroup(
																												gl_jPanel1
																														.createSequentialGroup()
																														.addGroup(
																																gl_jPanel1
																																		.createParallelGroup(
																																				Alignment.LEADING)
																																		.addGroup(
																																				gl_jPanel1
																																						.createSequentialGroup()
																																						.addGap(1)
																																						.addComponent(
																																								jLabel2))
																																		.addComponent(
																																				jLabel3)
																																		.addComponent(
																																				jLabel6))
																														.addGap(42)
																														.addGroup(
																																gl_jPanel1
																																		.createParallelGroup(
																																				Alignment.LEADING)
																																		.addComponent(
																																				pNom,
																																				231,
																																				231,
																																				231)
																																		.addComponent(
																																				pID,
																																				231,
																																				231,
																																				231)
																																		.addComponent(
																																				pUnite,
																																				231,
																																				231,
																																				231)))
																										.addGroup(
																												gl_jPanel1
																														.createSequentialGroup()
																														.addGroup(
																																gl_jPanel1
																																		.createParallelGroup(
																																				Alignment.TRAILING)
																																		.addComponent(
																																				jLabel5)
																																		.addComponent(
																																				jLabel4))
																														.addGap(18)
																														.addGroup(
																																gl_jPanel1
																																		.createParallelGroup(
																																				Alignment.LEADING,
																																				false)
																																		.addComponent(
																																				pVente)
																																		.addComponent(
																																				pAchat,
																																				GroupLayout.DEFAULT_SIZE,
																																				231,
																																				Short.MAX_VALUE)))))))
										.addGap(26)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.LEADING)
														.addComponent(
																label,
																GroupLayout.PREFERRED_SIZE,
																36,
																GroupLayout.PREFERRED_SIZE)
														.addComponent(
																label_1,
																GroupLayout.DEFAULT_SIZE,
																160,
																Short.MAX_VALUE)
														.addComponent(
																pAnnuler,
																GroupLayout.PREFERRED_SIZE,
																107,
																GroupLayout.PREFERRED_SIZE))
										.addContainerGap()));
		gl_jPanel1
				.setVerticalGroup(gl_jPanel1
						.createParallelGroup(Alignment.LEADING)
						.addGroup(
								gl_jPanel1
										.createSequentialGroup()
										.addGap(35)
										.addComponent(jLabel1)
										.addGap(18)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel2)
														.addComponent(
																pID,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(38)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel3)
														.addComponent(
																pNom,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(35)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel6)
														.addComponent(
																pUnite,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(43)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel4)
														.addComponent(label)
														.addComponent(
																pAchat,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(41)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel5)
														.addComponent(
																pVente,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE)
														.addComponent(label_1))
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.LEADING)
														.addGroup(
																gl_jPanel1
																		.createSequentialGroup()
																		.addPreferredGap(
																				ComponentPlacement.RELATED,
																				55,
																				Short.MAX_VALUE)
																		.addGroup(
																				gl_jPanel1
																						.createParallelGroup(
																								Alignment.BASELINE)
																						.addComponent(
																								pReprendre,
																								GroupLayout.PREFERRED_SIZE,
																								32,
																								GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								pAnnuler,
																								GroupLayout.PREFERRED_SIZE,
																								34,
																								GroupLayout.PREFERRED_SIZE))
																		.addGap(35))
														.addGroup(
																gl_jPanel1
																		.createSequentialGroup()
																		.addGap(41)
																		.addComponent(
																				pConfirmer,
																				GroupLayout.PREFERRED_SIZE,
																				37,
																				GroupLayout.PREFERRED_SIZE)
																		.addContainerGap()))));
		jPanel1.setLayout(gl_jPanel1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 607, Short.MAX_VALUE)
				.addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(
										layout.createSequentialGroup()
												.addGap(0, 0, Short.MAX_VALUE)
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(0, 0, Short.MAX_VALUE))));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 477, Short.MAX_VALUE)
				.addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(
										layout.createSequentialGroup()
												.addGap(0, 0, Short.MAX_VALUE)
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(0, 0, Short.MAX_VALUE))));

		pack();
	}// </editor-fold>

	public void insertionProduit() {

		try {
			Statement stmt = Fenetre.getConnection().createStatement();
			ResultSet set = SelectBDP(pID.getText());
			if (set.next()) {
				JOptionPane
						.showMessageDialog(
								this,
								"Un Produit ayant cet identificateur existe deja. Veuillez le changer !",
								"DUPLICATION D'IDENTIFICATION", 1);
			} else {
				int a = stmt
						.executeUpdate("INSERT INTO Produit(Identification_P,Nom,Unite,PrixAchat,PrixVente)  VALUES (\""
								+ pID.getText()
								+ "\",\""
								+ pNom.getText()
								+ "\",\""
								+ pUnite.getText()
								+ "\",\""
								+ pAchat.getText()
								+ "\",\""
								+ pVente.getText()
								+ "\");");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		revalidate();
	}

	public void insertionStock() {

		try {
			Statement stmt = Fenetre.getConnection().createStatement();
			ResultSet set = SelectBDP(getPID(pID.getText()));
			if (set.next()) {
				JOptionPane
						.showMessageDialog(
								this,
								"Un Produit ayant cet identification existe deja. Veuillez le changer !",
								"DUPLICATION D'IDENTIFICATION", 1);
			} else {
				int a = stmt
						.executeUpdate("INSERT INTO Stock(ProduitID,Nom,Unite,NbUnite,PrixAchat,PrixVente)  VALUES (\""
								+ getPID(pID.getText())
								+ "\",\""
								+ pNom.getText()
								+ "\",\""
								+ pUnite.getText()
								+ "\",\""
								+ "0"
								+ "\",\""
								+ pAchat.getText()
								+ "\",\"" + pVente.getText() + "\");");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		revalidate();
	}

	private void pVenteActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	/**
	 * Permet d'obtenir les informations sur un etudiant de la table Etudiant
	 * 
	 * @param mat
	 *            Le matricule de l'etudiant en question
	 * @return ResultSet des informations
	 */
	public ResultSet SelectBDP(String id) {
		ResultSet resultats = null;

		try {
			PreparedStatement stmt = Fenetre.getConnection().prepareStatement(
					"SELECT * FROM Produit WHERE Identification_P=?");
			stmt.setString(1, id);
			resultats = stmt.executeQuery();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return resultats;
	}

	/**
	 * Permet d'obtenir les informations sur un etudiant de la table Etudiant
	 * 
	 * @param mat
	 *            Le matricule de l'etudiant en question
	 * @return ResultSet des informations
	 */
	public ResultSet SelectBDS(String id) {
		ResultSet resultats = null;

		try {
			PreparedStatement stmt = Fenetre.getConnection().prepareStatement(
					"SELECT * FROM Stock WHERE ProduitID=?");
			stmt.setString(1, id);
			resultats = stmt.executeQuery();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return resultats;
	}
}
