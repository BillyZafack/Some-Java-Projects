import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.LayoutStyle.ComponentPlacement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * 
 * @author Zafack Billy
 */
public class Client extends javax.swing.JDialog {

	class Actionc implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			if (e.getSource() == cReprendre) {
				pID.setText("");
				pNom.setText("");
				cPrenom.setText("");
				cProfession.setText("");
				cTelephone.setText("");
			}
			if (e.getSource() == cQuitter) {
				setVisible(false);
			}
			if (e.getSource() == cConfirmer) {
				if (JOptionPane.showConfirmDialog(
						Client.this,
						"Voulez vous vraiment enregistrer le client "
								+ pNom.getText() + " " + cPrenom.getText()
								+ " ?", "CONFIRMATION",
						JOptionPane.YES_NO_CANCEL_OPTION) == JOptionPane.YES_OPTION) {
					if (pID.getText().equals("")) {
						JOptionPane
								.showMessageDialog(
										Client.this,
										"Vous n'avez pas renseigner l'identification de produit",
										"CHAMPS NON-RENSEIGNE",
										JOptionPane.WARNING_MESSAGE);
					}

					else {
						insertionClient();
						setVisible(false);
					}
				}

			}
		}

	}

	// Variables declaration - do not modify
	private javax.swing.JButton cConfirmer;

	private javax.swing.JTextField cPrenom;

	private javax.swing.JTextField cProfession;

	private javax.swing.JButton cQuitter;

	private javax.swing.JButton cReprendre;

	private javax.swing.JTextField cTelephone;

	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JTextField pID;
	private javax.swing.JTextField pNom;

	// End of variables declaration
	/**
	 * Creates new form Clients
	 */
	public Client(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		setIconImage(Toolkit.getDefaultToolkit().getImage(
				".\\images\\fenetre.png"));
		initComponents();
		cConfirmer.addActionListener(new Actionc());
		cReprendre.addActionListener(new Actionc());
		cQuitter.addActionListener(new Actionc());
		pID.setEnabled(false);
		String d = getLPIDD();
		System.out.println("WW " + d);
		d = d.substring(1, d.length());
		System.out.println("WW " + d);
		int i = Integer.parseInt(d);
		System.out.println("WW " + i);
		i++;
		System.out.println("WW " + i);
		pID.setText("C" + Integer.toString(i));
	}

	private void cConfirmerActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void cQuitterActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	public String getLPIDD() {
		String ss = "";
		try {
			Statement stmt = Fenetre.getConnection().createStatement();
			ResultSet r = stmt
					.executeQuery("SELECT Identification_C FROM Client");

			if (r.last()) {
				ss = r.getString("Identification_C");
			} else {
				ss = "C0";
			}
		} catch (SQLException s) {

			s.printStackTrace();
		}
		return ss;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		pID = new javax.swing.JTextField();
		cProfession = new javax.swing.JTextField();
		cPrenom = new javax.swing.JTextField();
		pNom = new javax.swing.JTextField();
		cTelephone = new javax.swing.JTextField();
		cReprendre = new javax.swing.JButton();
		cQuitter = new javax.swing.JButton();
		cConfirmer = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
		jLabel1.setText("NOUVEAU CLIENT");

		jLabel2.setText("IDENTIFICATION :*");

		jLabel3.setText("NOM DU CLIENT :");

		jLabel7.setText("PRENOM DU CLIENT :");

		jLabel5.setText("PROFESSION :");

		jLabel4.setText("NUMERO DE TELEPHONE :");
		jLabel4.setIcon(new ImageIcon(".\\images\\call.png"));

		cReprendre.setText("Reprendre");

		cQuitter.setText("Quitter");
		cQuitter.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cQuitterActionPerformed(evt);
			}
		});

		cReprendre.setIcon(new ImageIcon(".\\images\\reprendre.png"));
		cQuitter.setIcon(new ImageIcon(".\\images\\annuler.png"));
		cConfirmer.setIcon(new ImageIcon(".\\images\\ajouter.png"));
		cConfirmer.setText("Confirmer");
		cConfirmer.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cConfirmerActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout gl_jPanel1 = new javax.swing.GroupLayout(
				jPanel1);
		gl_jPanel1
				.setHorizontalGroup(gl_jPanel1
						.createParallelGroup(Alignment.TRAILING)
						.addGroup(
								gl_jPanel1
										.createSequentialGroup()
										.addContainerGap(172, Short.MAX_VALUE)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.LEADING)
														.addComponent(jLabel4)
														.addComponent(jLabel5)
														.addComponent(jLabel7)
														.addComponent(jLabel3)
														.addComponent(jLabel2)
														.addGroup(
																gl_jPanel1
																		.createSequentialGroup()
																		.addPreferredGap(
																				ComponentPlacement.RELATED)
																		.addComponent(
																				cReprendre,
																				GroupLayout.PREFERRED_SIZE,
																				108,
																				GroupLayout.PREFERRED_SIZE)))
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.TRAILING,
																false)
														.addGroup(
																gl_jPanel1
																		.createSequentialGroup()
																		.addGap(93)
																		.addGroup(
																				gl_jPanel1
																						.createParallelGroup(
																								Alignment.LEADING)
																						.addComponent(
																								pNom,
																								GroupLayout.PREFERRED_SIZE,
																								259,
																								GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								pID,
																								GroupLayout.PREFERRED_SIZE,
																								259,
																								GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								cPrenom,
																								GroupLayout.PREFERRED_SIZE,
																								259,
																								GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								cProfession,
																								GroupLayout.PREFERRED_SIZE,
																								259,
																								GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								cTelephone,
																								GroupLayout.PREFERRED_SIZE,
																								259,
																								GroupLayout.PREFERRED_SIZE))
																		.addGap(128))
														.addGroup(
																Alignment.LEADING,
																gl_jPanel1
																		.createSequentialGroup()
																		.addGap(70)
																		.addComponent(
																				cConfirmer,
																				GroupLayout.PREFERRED_SIZE,
																				129,
																				GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				ComponentPlacement.RELATED,
																				GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.addComponent(
																				cQuitter,
																				GroupLayout.PREFERRED_SIZE,
																				115,
																				GroupLayout.PREFERRED_SIZE)
																		.addGap(51))))
						.addGroup(
								gl_jPanel1.createSequentialGroup().addGap(286)
										.addComponent(jLabel1)
										.addContainerGap(325, Short.MAX_VALUE)));
		gl_jPanel1
				.setVerticalGroup(gl_jPanel1
						.createParallelGroup(Alignment.LEADING)
						.addGroup(
								gl_jPanel1
										.createSequentialGroup()
										.addGap(61)
										.addComponent(jLabel1)
										.addGap(29)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel2)
														.addComponent(
																pID,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(55)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel3)
														.addComponent(
																pNom,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(48)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel7)
														.addComponent(
																cPrenom,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(51)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.TRAILING)
														.addComponent(
																cProfession,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel5))
										.addGap(39)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.BASELINE)
														.addComponent(jLabel4)
														.addComponent(
																cTelephone,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(64)
										.addGroup(
												gl_jPanel1
														.createParallelGroup(
																Alignment.TRAILING)
														.addGroup(
																gl_jPanel1
																		.createSequentialGroup()
																		.addGroup(
																				gl_jPanel1
																						.createParallelGroup(
																								Alignment.BASELINE)
																						.addComponent(
																								cReprendre,
																								GroupLayout.PREFERRED_SIZE,
																								33,
																								GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								cQuitter,
																								GroupLayout.PREFERRED_SIZE,
																								35,
																								GroupLayout.PREFERRED_SIZE))
																		.addGap(38))
														.addGroup(
																gl_jPanel1
																		.createSequentialGroup()
																		.addComponent(
																				cConfirmer,
																				GroupLayout.PREFERRED_SIZE,
																				36,
																				GroupLayout.PREFERRED_SIZE)
																		.addContainerGap()))));
		jPanel1.setLayout(gl_jPanel1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 798, Short.MAX_VALUE)
				.addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(
										javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup()
												.addContainerGap(
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addContainerGap(
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE))));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 559, Short.MAX_VALUE)
				.addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(
										javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup()
												.addContainerGap(
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addContainerGap(
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE))));

		pack();
	}// </editor-fold>

	public void insertionClient() {

		try {
			Statement stmt = Fenetre.getConnection().createStatement();
			ResultSet set = SelectBDC(pID.getText());
			if (set.next()) {
				JOptionPane
						.showMessageDialog(
								this,
								"Un Client ayant cet identification existe deja. Veuillez le changer !",
								"DUPLICATION D'IDENTIFICATION", 1);
			} else {
				int a = stmt
						.executeUpdate("INSERT INTO Client(Identification_C,Nom,Prenom,Profession,Telephone)  VALUES (\""
								+ pID.getText()
								+ "\",\""
								+ pNom.getText()
								+ "\",\""
								+ cPrenom.getText()
								+ "\",\""
								+ cProfession.getText()
								+ "\",\""
								+ cTelephone.getText() + "\");");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		revalidate();
	}

	/**
	 * Permet d'obtenir les informations sur un etudiant de la table Etudiant
	 * 
	 * @param mat
	 *            Le matricule de l'etudiant en question
	 * @return ResultSet des informations
	 */
	public ResultSet SelectBDC(String id) {
		ResultSet resultats = null;

		try {
			PreparedStatement stmt = Fenetre.getConnection().prepareStatement(
					"SELECT * FROM Client WHERE Identification_C=?;");
			stmt.setString(1, id);
			resultats = stmt.executeQuery();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		System.out.println(resultats);
		return resultats;
	}
}
